##=======================##
## monerod configuration ##
##======================================================##
## Below is a decent amount of configuration            ##
## options for your 'monerod'. It is already            ##
## set with sane defaults for modern computers,         ##
## so you shouldn't need to touch anything.             ##
##                                                      ##
## More advanced settings are commented out with a '#'  ##
## To use these, uncomment them (delete the #)          ##
##                                                      ##
## '##' = explaination & usage                          ##
## '#'  = disabled/commented option                     ##
##                                                      ##
## Complete 'monerod' configuration docs here:          ##
## https://monerodocs.org/interacting/monerod-reference ##
##======================================================##


##-------------------------------------------------------##
##                         DATA                          ##
##-------------------------------------------------------##
## Full path to data directory. This is where the blockchain,
## log files, and p2p network memory are stored.
## Default is '/home/user/.bitmonero'
## USAGE: [/YOUR/PATH]
data-dir=

## Pruning saves 2/3 of disk space without degrading functionality.
## For maximum effect this should be used already on the first sync.
## If you add this option later the past data will only be pruned logically
## without shrinking the file size and the gain will be delayed. 
## USAGE: [true|false]
#prune-blockchain=false

##---------------------------------------------------------##
##                      NOTIFICATION                       ##
##---------------------------------------------------------##
## BY DEFAULT, MONERO-BASH'S SYSTEMD VERSION OF [MONEROD]
## IS ONLY ALLOWED TO WRITE TO THESE PATHS:
## [/usr/local/share/monero-bash/bin/monero] & [$HOME/.bitmonero]
## PERMISSION ERRORS WILL OCCUR IF YOUR PROGRAM TRIES TO WRITE OUTSIDE OF THESE.

## Run a program for each new block. The <arg> must be a full path.
## If the <arg> contains [%s] it will be replaced by the block hash.
## EXAMPLE: [block-notify=/usr/bin/echo %s]
## USAGE: [/full/path/to/command]
#block-notify=

## Run a program when the number of blocks received in the recent
## past deviates significantly from the expectation. The <arg> must be a full path.
## The <arg> can contain any of [%t], [%b], [%e] symbols to interpolate:
## [%t]: the number of minutes in the observation window
## [%b]: the number of blocks observed in that window
## [%e]: the ideal number of blocks expected in that window
## USAGE: [/full/path/to/command (%t|%b|%e)]
#block-rate-notify=

## Run a program when reorganization happens (ie, at least one block is removed from the top of the blockchain).
## The <arg> must be a full path. The <arg> can contain any of %s, %h, %n symbols to interpolate:
## [%s]: the height at which the split occurs
## [%h]: the height of the new blockchain
## [%d]: the number of blocks discarded from the old chain
## [%n]: the number of blocks being added 
## USAGE: [/full/path/to/command (%s|%h|%d|%n)]
#reorg-notify=

##--------------------------------------------------------##
##                      PERFORMANCE                       ##
##--------------------------------------------------------##
## Specify sync options, the default is: fast:async:250000000bytes
## The fast:async:* can corrupt blockchain database in case of a system crash.
## It should not corrupt if just monerod crashes. If you are concerned with system crashes use safe:sync.
## USAGE: [safe|fast|fastest]:[sync|async]:[<nblocks_per_sync>[blocks]|<nbytes_per_sync>[bytes]]
#db-sync-mode=fast:async:250000000bytes

## Max number of threads to use for parallel jobs.
## The default value 0 uses the number of CPU threads.
## USAGE: [CPU_THREADS]
#max-concurrency=0

## Max number of threads to use when computing block hashes (PoW) in groups.
## Defaults to 4. Decrease this if you don't want monerod hog your computer when syncing.
## USAGE: [CPU_THREADS]
#prep-blocks-threads=

## Sync up most of the way by using embedded, "known" block hashes.
## This is on (true) by default. Normally, for every block the full node must calculate
## the block hash to verify miner's proof of work. Because the CryptoNight PoW used
## in Monero is very expensive (even for verification), monerod offers skipping these
## calculations for old blocks. In other words, it's a mechanism to trust monerod
## binary regarding old blocks' PoW validity, to sync up faster.
## USAGE: [true|false]
#fast-block-sync=true

## How many blocks are processed in a single batch during chain synchronization.
## By default this is 20 blocks for newer history and 100 blocks for older history ("pre v4").
## Default behavior is represented by value 0. Intuitively, the more resources you have,
## the bigger batch size you may want to try out. Example: block-sync-size=500
## USAGE: [INTEGER]
#block-sync-size=

## Set maximum transactions pool size in bytes. By default 648000000 (~618MB).
## These are transactions pending for confirmations (not included in any block).
## USAGE: [BYTES]
#max-txpool-weight=

##------------------------------------------------------##
##                         LOG                          ##
##------------------------------------------------------##
## 0 is minimal logging and 4 is full tracing. Defaults to 0.
## These are general presets and do not directly map to severity levels.
## For example, even with minimal 0, you may see some most important INFO entries.
## USAGE: [0-4]
log-level=0

##------------------------------------------------------##
##                         ZMQ                          ##
##------------------------------------------------------##
## Address to bind ZMQ to. THIS IS NEEDED FOR P2POOL TO WORK!
## If you don't use P2Pool, it's recommended to disable this.
## USAGE: [tcp://IP:PORT]
zmq-pub=tcp://127.0.0.1:18083

##-------------------------------------------------------##
##                         UPnP                          ##
##-------------------------------------------------------##
## Set UPnP port mapping on the router ("Internet Gateway Device").
## Relevant if you are behind NAT and want to accept incoming P2P network connections.
## The delayed value means it will wait for incoming connections in hope UPnP may not be necessary.
## After a while w/o incoming connections found it will attempt to map ports with UPnP.
## If you know you need UPnP change it to enabled to fast track the process.
## USAGE: [disabled|enabled|delayed]
igd=delayed

##------------------------------------------------------##
##                         DNS                          ##
##------------------------------------------------------##
## See more information about how Monero uses
## DNS here: https://monerodocs.org/infrastructure/monero-pulse/

## The emergency checkpoints set by MoneroPulse operators will be enforced.
## It is probably a good idea to set enforcing for unattended nodes. 
## USAGE: [true|false]
enforce-dns-checkpointing=false

## Enable/disable the dynamic IP blocklist.
## The DNS blocklist is centrally managed by Monero contributors.
## USAGE: [true|false]
enable-dns-blocklist=false

## Enable/disable the MoneroPulse checkpoints set by core developers.
## USAGE: [true|false]
disable-dns-checkpoints=true

##------------------------------------------------------##
##                         P2P                          ##
##------------------------------------------------------##
## IPv4 network interface to bind to for the P2P network protocol.
## Default value 0.0.0.0 binds to all network interfaces.
## USAGE: [IP]
p2p-bind-ip=0.0.0.0

## TCP port to listen for p2p network connections.
## Default is 18080.
## USAGE: [PORT]
p2p-bind-port=18080

## [monerod] will still open and listen on the p2p port. 
## However, it will not announce itself as a peer list candidate.
## In effect nodes you connect to won't spread your IP to other nodes.
## To sum up, it is not really hiding, it is more like "do not advertise".
## [USAGE]: [true|false]
#hide-my-port=

##------------------------------------------------------##
##                        PEERS                         ##
##------------------------------------------------------##
## Set max number of outgoing connections to other nodes.
## Usually the default is 12, but modern machines can benefit from more.
## USAGE: [INTEGER] OR [-1 for default (12)]
out-peers=64

## Set max number of incoming connections (nodes connecting to you).
## By default unlimited. Others can only connect to you if your
## P2P port is open (18080 by default).
## USAGE: [INTEGER] OR [-1 for default (unlimited)]
in-peers=-1

## Do not listen for peers, nor connect to any.
## USAGE: [true|false]
#offline=

##------------------------------------------------------##
##                      BANDWIDTH                       ##
##------------------------------------------------------##
## Quick conversion help:
##
## | INPUT  | Bytes         | Bits       |
## |--------|---------------|------------|
## | 128000 | 128 Megabytes | 1   Gbit/s |
## | 64000  | 64  Megabytes | 500 Mbit/s |
## | 32000  | 32  Megabytes | 250 Mbit/s |
## | 16000  | 16  Megabytes | 125 Mbit/s |
## | 1000   | 1   Megabyte  | 8   Mbit/s |
##
##    ^
##    |__ Use these numbers for
##        the below options :)
##
## Limit outgoing data transfer limit in [kB/s]
## USAGE: [KILOBYTES]
limit-rate-up=8000

## Limit outgoing data transfer limit in [kB/s]
## USAGE: [KILOBYTES]
limit-rate-down=8000

##-------------------------------------------------------##
##                        TOR/I2P                        ##
##-------------------------------------------------------##
## The usage of these networks is still considered experimental.
## Full usage here: https://github.com/monero-project/monero/blob/master/docs/ANONYMITY_NETWORKS.md

## Send out your local transactions through SOCKS5 proxy (Tor or I2P).
## This was introduced to make publishing transactions over Tor easier (no need for torsocks)
## while allowing clearnet for blocks at the same time (while torsocks affected everything).
## Adding ,disable_noise disables white noise and Dandelion++ (will speed up tx broadcast but is otherwise not recommended).
## Note that forwarded transactions (those not originating from connected wallet) will still be relayed over clearnet.
## Requires multiple 'add-peer=' to manually add onion-enabled p2p seed nodes 
## USAGE: [ <network-type>,<socks-ip:port>[,max_connections][,disable_noise] ]
#tx-proxy=tor,127.0.0.1:9050,10
#tx-proxy=i2p,127.0.0.1:9000

## Allow anonymous incoming connections to your onionized P2P interface.
## USAGE: [ <hidden-service-address>,<[bind-ip:]port>[,max_connections] ]
#anonymous-inbound=YOUR_ONION_ADDRESS.onion:18082,127.0.0.1:18082,100
#anonymous-inbound=YOUR_I2P_ADDRESS.b32.i2p:5000,127.0.0.1:30000

## Pad relayed transactions to next 1024 bytes to help defend against traffic volume analysis.
## This only makes sense if you are behind Tor or I2P.
#pad-transactions=true

##------------------------------------------------------##
##         LOCAL RPC (unsafe to use publically)         ##
##------------------------------------------------------##
## IP to listen on. By default 127.0.0.1 because API gives
## full administrative capabilities over the node.
## Set it to 0.0.0.0 to listen on all interfaces, BUT ONLY
## in connection with one of *-restricted-* options and 'confirm-external-bind'
## USAGE: [IP]
rpc-bind-ip=127.0.0.1

## TCP port to listen on. By default 18081.
## USAGE: [PORT]
rpc-bind-port=18081

## Specify username/password required to connect to RPC.
## USAGE: [ username[:password] ]
#rpc-login=my_username:my_mypassword

## Confirm you consciously set 'rpc-bind-ip' to a
## non-localhost IP and you understand the consequences.
## USAGE: [true|false]
#confirm-external-bind=

##-----------------------------------------------------##
##           RESTRICTED RPC (for public use)           ##
##-----------------------------------------------------##
## IP to listen on with the limited version of the RPC API.
## USAGE: [IP]
#rpc-restricted-bind-ip=0.0.0.0

## TCP port to listen on with the limited version of the RPC API.
## USAGE: [PORT]
#rpc-restricted-bind-port=18089

## Advertise to other users they can use this 
## node as a remote one for connecting their wallets.
## Requires 'restricted-rpc', 'rpc-bind-ip' 'confirm-external-bind'
## USAGE: [true|false]
#public-node=true

## Enable TLS on RPC connections.
## You should enable this if you connect a remote wallet.
## USAGE: [enabled|disabled|autodetect]
#rpc-ssl=autodetect

## Do not ban hosts on RPC errors. May help to prevent monerod
## from banning traffic originating from the Tor daemon.
## USAGE: [true|false]
#disable-rpc-ban=true

##-----------------------------------------------------##
##                    SPECIAL NODES                    ##
##-----------------------------------------------------##
## Manually add node to local peer list.
## Syntax supports IP addresses, domain names, onion and i2p hosts.
## USAGE: [IP:PORT]
#add-peer=
#add-peer=TOR_ADDRESS.onion:PORT

## Connect to a node to retrieve other nodes' addresses, and disconnect.
## If not specified, monerod will use hardcoded seed nodes on the first run,
## and peers cached on disk on subsequent runs.
## USAGE: [IP:PORT]
#seed-node=

## Specify list of nodes to connect to and then attempt to keep the connection open. 
## To add multiple nodes use the option several times.
## USAGE: [MONERO_NODE_IP]
#add-priority-node=
#add-priority-node=
#add-priority-node=

## Specify list of nodes to connect to only.
## To add multiple nodes use the option several times.
## USAGE: [MONERO_NODE_IP]
#add-exclusive-node=
#add-exclusive-node=
#add-exclusive-node=TOR_ADDRESS.onion:28083
