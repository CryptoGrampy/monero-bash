#!/usr/bin/env bash
#
#                       Print Functions
#
print_GreenHash()
{
	$bgreen; echo "###### $1" ;$off
}

print_RedHash()
{
	$ired; echo "###### $1" ;$off
}

print_WhiteHash()
{
	$bwhite; echo "### $1" ;$off
}

print_MoneroBashTitle()
{
	$bred; echo "###################"
	$bred; echo "#   monero-bash   #"
	$bred; echo "###################"
	$off
}

print_Version()
{
	$white; echo -n "monero-bash: "
	if [[ "$MONERO_BASH_OLD" = "true" ]]; then
		$bred; echo "$MONERO_BASH_VER"
	else
		$bgreen; echo "$MONERO_BASH_VER"
	fi
	$white; echo -n "Monero: "
	if [[ "$MONERO_OLD" = "true" ]]; then
		$bred; echo "$MONERO_VER"
	else
		$bgreen; echo "$MONERO_VER"
	fi
	$white; echo -n "XMRig: "
	if [[ "$XMRIG_OLD" = "true" ]]; then
		$bred; echo "$XMRIG_VER"
	else
		$bgreen; echo "$XMRIG_VER"
	fi
	$white; echo -n "P2Pool: "
	if [[ "$P2POOL_OLD" = "true" ]]; then
		$bred; echo "$P2POOL_VER"
	else
		$bgreen; echo "$P2POOL_VER"
	fi
}

print_Usage()
{
    $off; echo -n "monero-bash usage: "
    $ired; echo "monero-bash <option> <more options>" ;$off
    echo
    cat "$installDirectory/src/txt/usage"
    echo
    $ired; echo -n "monero-bash, "
    $white; echo -n "made by: "
    $bgreen; echo "hinto.janaiyo"
}

print_Size()
{
	$white; echo -n "monero-bash install: " ;$ired
	du -h "$installDirectory"  --exclude="$installDirectory/bin" | tail -n 1 | awk '{print $1}'
	$white; echo -n "/.monero-bash/: " ;$ired
	du -h "$dotMoneroBash" | tail -n 1 | awk '{print $1}'
	if [[ "$DATA_PATH" != "$bitMonero" ]]; then
		$white; echo -n "/.bitmonero/: " ;$ired
		du -h "$DATA_PATH" | tail -n 1 | awk '{print $1}'
	fi
	if [[ $MONERO_VER != "" ]]; then
		$white; echo -n "Monero: " ;$ired
		du -h "$binMonero" | tail -n 1 | awk '{print $1}'
	fi
	if [[ $XMRIG_VER != "" ]]; then
		$white; echo -n "XMRig: " ;$ired
		du -h "$binXMRig" | tail -n 1 | awk '{print $1}'
	fi
	if [[ $P2POOL_VER != "" ]]; then
		$white; echo -n "P2Pool: " ;$ired
		du -h "$binP2Pool" | tail -n 1 | awk '{print $1}'
	fi
}

print_Error()
{
	$ired; printf "monero-bash error: "
	$iwhite; echo "$1"
}

print_Error_Exit()
{
	$ired; printf "monero-bash error: "
	$iwhite; echo "$1"
	$white; echo "Exiting..."
	exit
}

# used for color coding sha256sum output (FOR UPGRADE FUNCTION)
print_OKFAILED()
{
	if [[ $? = "0" ]]; then
		$white; echo -n "$tarName: "
		$igreen; echo "OK" ;$white
		verifyOK="true"
	else
		$white; echo -n "$tarName: "
		$bred; echo "FAILED" ;$white
		verifyOK="false"
	fi
}

print_SeedLanguageList()
{
cat <<EOM
0 : Deutsch
1 : English
2 : Español
3 : Français
4 : Italiano
5 : Nederlands
6 : Português
7 : русский язык
8 : 日本語
9 : 简体中文 (中国)
10 : Esperanto
11 : Lojban
EOM
}

print_NotYet()
{
	$bred; echo -n "monero-bash: "
	$white; echo "This feature is not implemented yet!"
	echo
	echo "If you'd like to show support to get this program funded, here is the CCS Proposal: "
	$bwhite; echo "https://repo.getmonero.org/monero-project/ccs-proposals/-/merge_requests/297"
}
