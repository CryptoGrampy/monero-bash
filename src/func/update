#!/usr/bin/env bash
# update functions

update_Template()
{
	version_Update
	if [[ "$NAME_VER" != "$NewVer" ]]; then
		$bwhite; echo -n "$NAME_SPACED"
		$bred; echo -n "$NAME_VER "
		$bwhite; echo -n "-> "
		$bgreen; echo "$NewVer"
		updateFound="true"
		sudo sed -i "s@.*"$NAME_CAPS"_OLD=.*@"$NAME_CAPS"_OLD=\"true\"@" "$state"
		PRODUCE_HASH_LIST &>/dev/null
	else
		sudo sed -i "s@.*"$NAME_CAPS"_OLD=.*@"$NAME_CAPS"_OLD=\"false\"@" "$state"
		PRODUCE_HASH_LIST &>/dev/null
		$bwhite; echo -n "$NAME_SPACED"
		$bgreen; echo "$NAME_VER"
	fi
}

update_Monero()
{
	define_Monero
	local NAME_SPACED="Monero      | "
	update_Template
}

update_MoneroBash()
{
	define_MoneroBash
	local NAME_SPACED="monero-bash | "
	update_Template
}

update_XMRig()
{
	define_XMRig
	local NAME_SPACED="XMRig       | "
	update_Template
}

update_P2Pool()
{
	define_P2Pool
	local NAME_SPACED="P2Pool      | "
	update_Template
}

update_All()
{
	prompt_Sudo
	error_Sudo
	$bwhite; printf "%s\n\n" "### Fetching pkg meta-data ###"
	update_MoneroBash
	[[ $MONERO_VER != "" ]]&& update_Monero
	[[ $XMRIG_VER != "" ]]&& update_XMRig
	[[ $P2POOL_VER != "" ]]&& update_P2Pool
    if [[ $updateFound = "true" ]]; then
        echo
        $white; echo -n "Updates found, type: "
        $bred; echo -n "[monero-bash upgrade] "
        $white; echo "to upgrade all"
        $white; echo -n "Or:   "
        $bred; echo -n "[monero-bash upgrade <package>] "
        $white; echo "to upgrade something specific"
        $off
		exit 0
	else
		$bgreen; printf "\n%s\n" "### All package up-to-date ###"
		$off; exit 1
    fi
}
