#!/bin/bash
#
# hash & GPG verification of binaries
#
# everyone has a slightly differently named sha256sum
# file, with slightly different internal formatting.
# makes this function a bit long.
verify_Template()
{
	# api or html? (or are we downloading monero?)
	if [[ "$HTML" = "true" && "$downloadMonero" != "true" ]]; then
		hashLink="$(echo "$DUMP" \
		| grep -o "/$AUTHOR/$PROJECT/releases/download/.*/$SHA" \
		| head -n1 \
		| awk '{print $1}' \
		| tr -d '"' \
		| sed 's@^@https://github.com@')"
	elif [[ "$API" = "true" && "$downloadMonero" != "true" ]]; then
		hashLink="$(echo "$DUMP" \
			| grep "browser_download_url.*$SHA" \
			| awk '{print $2}' | head -n1 | tr -d '"')"
	else
		hashLink="https://www.getmonero.org/downloads/hashes.txt"
	fi

	# setting of variables (and gpg)
	tarFile="$(ls "$tmp")"
	if [[ $VERIFY_GPG = "true" ]]; then
		wget -q -P "$tmpHash" "$hashLink"
		code_Wget
		hashFile="$(ls "$tmpHash")"
		sigFile="$hashFile"
		hashSTDOUT="$(cat "$tmpHash/$hashFile")"

	# xmrig author pls include the sig in the hash file
		if [[ $downloadXMRig = "true" ]]; then
			if [[ $HTML = "true" ]]; then
				sigLink="$(echo "$DUMP" \
				| grep -o "/$AUTHOR/$PROJECT/releases/download/.*/$SIG" \
				| head -n1 \
				| awk '{print $1}' \
				| tr -d '"' \
				| sed 's@^@https://github.com@')"
			elif [[ "$API" = "true" ]]; then
				sigLink="$(echo "$DUMP" \
				| grep "browser_download_url.*$SIG" \
				| awk '{print $2}' | head -n1 | tr -d '"')"
			fi
			wget -q -P "$tmpSig" "$sigLink"
			code_Wget
			sigFile="$(ls "$tmpSig")"
		fi
	else
		hashSTDOUT="$(wget -qO- "$hashLink")"
	fi

	# comparison of hashes (and are we downloading p2pool?)
	if [[ $downloadP2Pool = "true" ]]; then
		HASH="$(echo "$hashSTDOUT" | grep -A2 "$DOT_PKG" | grep "SHA256" | awk '{print $2}')"
	else
		HASH="$(echo "$hashSTDOUT" | grep "$DOT_PKG" | awk '{print $1}')"
	fi
	[[ "$HASH" = "" ]]&& error_Exit "Hash file was empty"
	echo "$HASH" "$tmp/$tarFile" | sha256sum -c &>/dev/null
	print_OKFAILED
	if [[ "$verifyOK" != "true" ]]; then
		LOCAL_HASH="$(sha256sum "$tmp/$tarFile" | awk '{print $1}' | tr -d " -")"
		compromised_Hash
	fi

	# gpg check
	if [[ $VERIFY_GPG = "true" ]]; then
		if [[ $downloadXMRig = "true" ]]; then
			gpg --verify "$tmpSig/$sigFile" "$tmpHash/$hashFile" &> "$tmpGPG"
			print_GPG
		else
			gpg --verify "$tmpHash/$sigFile" &> "$tmpGPG"
			print_GPG
		fi
		gpgSTDOUT="$(cat /tmp/monero-bash-gpg.*)"
		if [[ "$gpgOK" != "true" ]]; then
		LOCAL_HASH="$(sha256sum "$tmp/$tarFile" | awk '{print $1}' | tr -d " -")"
		compromised_GPG
		fi
	fi
}
