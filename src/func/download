#!/usr/bin/env bash
#
#						Download Functions
#
download_Template()
{
	tmp="$(find /tmp/monero-bash.*)"
	if [[ $downloadMonero = "true" ]]; then
		wget -P "$tmp" -q --show-progress --content-disposition "$link"
		code_Wget
	else
		link="$(wget -qO- "https://api.github.com/repos/$AUTHOR/$PROJECT/releases/latest" \
			| grep -o "https://github.com/$AUTHOR/$PROJECT/releases/download/.*/$PACKAGE" \
			| sed 's/\"//g')"
		wget -P "$tmp" -q --show-progress "$link"
		if [[ $? != "0" ]]; then
			$ired; echo "GitHub API error detected..."
			$white; echo "Trying GitHub HTML filter instead..."
			link="$(wget -qO- "https://github.com/$AUTHOR/$PROJECT/releases/latest" \
				| grep -o "/$AUTHOR/$PROJECT/releases/download/.*/$PACKAGE" \
				| awk '{print $1}' \
				| sed 's/\"//g')"
			wget -P "$tmp" -q --show-progress "https://github.com/$link"
			code_Wget
		fi
	fi
}
download_Monero()
{
	local link="https://downloads.getmonero.org/cli/linux64"
	local downloadMonero="true"
	download_Template
}

download_MoneroBash()
{
	local AUTHOR="hinto-janaiyo"
	local PROJECT="monero-bash"
	local PACKAGE="monero-bash-v.*"
	download_Template
}

download_XMRig()
{
	local AUTHOR="xmrig"
	local PROJECT="xmrig"
	local PACKAGE="xmrig.*linux-static-x64.*"
	download_Template
}

download_P2Pool()
{
	local AUTHOR="SChernykh"
	local PROJECT="p2pool"
	local PACKAGE="p2pool.*linux-x64.*"
	download_Template
}
