#!/bin/bash
#
#						Upgrade Functions
#
upgrade_Template()
{
	if [[ "$NAME_OLD" != "true" && "$FORCE_UPGRADE" != "true" ]]; then
		$white; echo -n "$NAME_PRETTY: "
		$bgreen; echo "up to date"
	else
		prompt_Sudo;error_Sudo
		safety_HashList
		tmp_Create;error_Exit "Could not create tmp folder"
		print_GreenHash "Downloading: [$NAME_PRETTY]"
		download_"$NAME_FUNC"
		error_Exit "Downloading failed: [$NAME_PRETTY]"
		verify_hash_"$NAME_FUNC"
		if [[ $? = "0" ]]; then
			print_RedHash "Extracting: [$NAME_PRETTY]"
			tar -xf "$tarName"
			rm -f "$tarName"
			local folderName="$(ls "$tmp")"
			if [[ $folderName = "" ]]; then
				$ired; echo "monero-bash error: extracted tar was not found"
				$white; echo "Exiting for safety..."
				exit
			fi
			if [[ $OLD_FOLDER = "true" ]]; then
				mkdir -p "$old/$currentDayTime" ; sudo mv "$DIRECTORY" "$old/$currentDayTime/"
			else
				sudo rm -rf "$DIRECTORY"
			fi
			sudo mv "$tmp/$folderName" "$DIRECTORY"
			sudo sed -i "s@.*"$NAME_SED"_VER=.*@"$NAME_SED"_VER=\""$NAME_NEWVER"\"@" "$state"
			sudo sed -i "s@.*"$NAME_SED"_OLD=.*@"$NAME_SED"_OLD=\"false\"@" "$state"
		else
			compromised_"$NAME_FUNC"_Hash
			exit
		fi
		tmp_Del;error_Exit "Could not cleanup tmp folder"
	fi
}

upgrade_Monero()
{
	NAME_OLD="$MONERO_OLD"
	NAME_PRETTY="Monero"
	NAME_FUNC="Monero"
	DIRECTORY="$binMonero"
	NAME_SED="MONERO"
	NAME_NEWVER="$monero_NewVer"
	upgrade_Template
}

upgrade_MoneroBash()
{
	NAME_OLD="$MONERO_BASH_OLD"
	NAME_PRETTY="monero-bash"
	NAME_FUNC="MoneroBash"
	DIRECTORY="$installDirectory"
	NAME_SED="MONERO_BASH"
	NAME_NEWVER="$moneroBash_NewVer"
	upgrade_Template
}

upgrade_XMRig()
{
	NAME_OLD="$XMRIG_OLD"
	NAME_PRETTY="XMRig"
	NAME_FUNC="XMRig"
	DIRECTORY="$binXMRig"
	NAME_SED="XMRIG"
	NAME_NEWVER="$xmrig_NewVer"
	upgrade_Template
}

upgrade_P2Pool()
{
	NAME_OLD="$P2Pool_OLD"
	NAME_PRETTY="P2Pool"
	NAME_FUNC="P2Pool"
	DIRECTORY="$binP2Pool"
	NAME_SED="P2POOL"
	NAME_NEWVER="$p2pool_NewVer"
	upgrade_Template
}

