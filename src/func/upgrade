#!/bin/bash
#
#						Upgrade Functions
#
upgrade_Template()
{
	if [[ "$NAME_OLD" != "true" && "$FORCE_UPGRADE" != "true" ]]; then
		$white; echo -n "$NAME_PRETTY: "
		$bgreen; echo "up to date" ;$off
	else
		prompt_Sudo;error_Sudo
		safety_HashList
		tmp_Create;error_Exit "Could not create tmp folder"
		print_GreenHash "Downloading: [$NAME_PRETTY]"
		download_"$NAME_FUNC"
		error_Exit "Downloading failed: [$NAME_PRETTY]"
		print_RedHash "Verifying"
		verify_hash_"$NAME_FUNC"
		if [[ "$verifyOK" = "true" ]]; then
			print_RedHash "Extracting"
			tar -xf "$tmp/$tarName" -C "$tmp" &&
			rm -f "$tmp/$tarName" &&
			$white; echo -n "$tarName: "
			$igreen; echo "EXTRACTED"
			local folderName="$(ls "$tmp")"
			if [[ $folderName = "" ]]; then
				$ired; echo "monero-bash error: extracted tar was not found"
				$white; echo "Exiting for safety..."
				exit
			fi
			if [[ $OLD_FOLDER = "true" ]]; then
				mkdir -p "$old/$currentDayTime"
				sudo mv "$DIRECTORY" "$old/$currentDayTime/"
			else
				sudo rm -rf "$DIRECTORY"
			fi
			sudo mv "$tmp/$folderName" "$DIRECTORY"
			[[ -f "$binXMRig/config.json"]]&& rm "$binXMRig/config.json"
			print_RedHash "Updating local state"
			version_New"$NAME_FUNC"
			sudo sed -i "s@.*"$NAME_CAPS"_VER=.*@"$NAME_CAPS"_VER=\""$NewVer"\"@" "$state"
			sudo sed -i "s@.*"$NAME_CAPS"_OLD=.*@"$NAME_CAPS"_OLD=\"false\"@" "$state"
			PRODUCE_HASH_LIST
			$white; echo -n "$NewVer: "
			$igreen; echo "NEW VERSION"
		else
			compromised_"$NAME_FUNC"_Hash
			exit
		fi
		tmp_Del;error_Exit "Could not cleanup tmp folder"
		print_GreenHash "Upgraded: [$NAME_PRETTY]"
	fi
}

upgrade_Monero()
{
	NAME_OLD="$MONERO_OLD"
	NAME_PRETTY="Monero"
	NAME_FUNC="Monero"
	DIRECTORY="$binMonero"
	NAME_CAPS="MONERO"
	upgrade_Template
}

upgrade_MoneroBash()
{
	NAME_OLD="$MONERO_BASH_OLD"
	NAME_PRETTY="monero-bash"
	NAME_FUNC="MoneroBash"
	DIRECTORY="$installDirectory"
	NAME_CAPS="MONERO_BASH"
	upgrade_Template
}

upgrade_XMRig()
{
	NAME_OLD="$XMRIG_OLD"
	NAME_PRETTY="XMRig"
	NAME_FUNC="XMRig"
	DIRECTORY="$binXMRig"
	NAME_CAPS="XMRIG"
	upgrade_Template
}

upgrade_P2Pool()
{
	NAME_OLD="$P2POOL_OLD"
	NAME_PRETTY="P2Pool"
	NAME_FUNC="P2Pool"
	DIRECTORY="$binP2Pool"
	NAME_CAPS="P2POOL"
	upgrade_Template
}

upgrade_All()
{
	upgrade_MoneroBash
	upgrade_Monero
	upgrade_XMRig
	upgrade_P2Pool
}
