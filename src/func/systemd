#!/usr/bin/env bash
# functions FOR CREATING systemd .service files

systemd_Template()
{
$white; echo "Creating $SERVICE..."
prompt_Sudo
error_Sudo
mktemp -d /tmp/monero-bash-service.XXXXXXX &>/dev/null
tmpService="$(find /tmp/monero-bash-service.*)"
sudo chmod -R 600 "$tmpService"

sudo sh -c "cat <<EOM > $tmpService/$SERVICE
[Unit]
Description=$SERVICE
After=network.target

[Service]
User=$USER
Group=$USER
Type=simple
EnvironmentFile=$config/monero-bash.conf
ExecStart=$COMMAND
WorkingDirectory=$DIRECTORY
Restart=always

[Install]
WantedBy=multi-user.target
EOM"

sudo chmod -R 600 "$tmpService"
sudo mv -f "$tmpService/$SERVICE" "$sysd"
$white; echo "Reloading systemd..."
sudo systemctl daemon-reload
}

systemd_Monero()
{
	define_Monero
	local COMMAND="$binMonero/monerod --config-file "$config/monerod.conf" --non-interactive"
	systemd_Template
}

systemd_XMRig()
{
	define_XMRig
	local USER="root"
	local COMMAND="$binXMRig/xmrig --config $xmrigConf"
	systemd_Template
}

systemd_P2Pool()
{
	define_P2Pool
	if [[ "$MINI" = "true" ]];then
		local COMMAND="$binP2Pool/p2pool --host "$DAEMON_IP" --wallet "$WALLET" --loglevel "$LOG_LEVEL" --mini"
	else
		local COMMAND="$binP2Pool/p2pool --host "$DAEMON_IP" --wallet "$WALLET" --loglevel "$LOG_LEVEL""
	fi
	systemd_Template
}

systemd_MoneroBash()
{
	echo "monero-bash: systemd not needed"
}
