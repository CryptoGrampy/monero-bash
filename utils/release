#!/usr/bin/env bash
#
# script to create new monero-bash releases
set -e
sudo -v

# check path
case $PWD in
	*/monero-bash) :;;
	*/monero-bash/utils) cd ..;;
	*) echo "wrong path"; exit 1;;
esac

# git folder
path="$HOME/git/monero-bash"

# create hashlist
if ! ./monero-bash DEBUG_04e3be9 CHECK_HASH_LIST; then
	./monero-bash DEBUG_04e3be9 PRODUCE_HASH_LIST
	git add .
	git commit -m '!!'
	git rebase -i HEAD~1 && git push -f
fi

# copy to tmp
[[ -d /tmp/monero-bash ]] && rm -fr "/tmp/monero-bash"
cp -fr "$path" "/tmp/"

# remove non-release files
cd "/tmp/monero-bash"
rm -rf docs .git tests .gitignore LICENSE README.md external lib LICENSE utils
mv -f CHANGELOG.md /tmp/CHANGELOG.md

# version
source "$path/src/txt/state"
v="monero-bash-${MONERO_BASH_VER}.tar"

# clean
cd "/tmp"
[[ -e "$v" ]]&& rm "$v"
[[ -e SHA256SUM ]]&& rm SHA256SUM
[[ -e SHA256SUM.asc ]]&& rm SHA256SUM.asc

# tar
rand=$((EPOCHSECONDS-RANDOM*4))
date=$(date -d @${rand})
tar -cpf "$v" "monero-bash" --owner=hinto --group=hinto --mtime="$date"
rm -rf monero-bash

# hash + sign
sha256sum "$v" > SHA256SUM
gpg --clearsign --faked-system-time=${rand} SHA256SUM
rm SHA256SUM
mv SHA256SUM.asc SHA256SUM

# check hash + sign
gpg --verify SHA256SUM &>/dev/null && echo "sign OK"  || echo "sign FAIL"
sha256sum -c SHA256SUM &>/dev/null && echo "hash OK" || echo "hash FAIL"

# copy changelog/sign to clipboard
CLIP() {
	grep -B999 -m1 "^---$" CHANGELOG.md | sed '/^# v1.*$/d; /^---$/d'
	echo "## SHA256SUM & [PGP Signature](https://github.com/hinto-janaiyo/monero-bash/blob/main/gpg/hinto-janaiyo.asc)"
	echo '```'
	cat SHA256SUM
	echo '```'
}
CLIP | xclip -selection clipboard
echo "changelog copied to clipboard"
rm CHANGELOG.md
